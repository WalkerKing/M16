/** 
 * @abstract 表驱动法例子 - 用查询表代替复杂表达式
 * A B C | output
 * 1 1 1 |  0
 * 1 0 0 |  1
 * 1 0 1 |  2
 * 1 1 0 |  1
 * 0 1 0 |  2
 * 0 0 1 |  3
 * 0 1 1 |  2
 * 0 0 0 |  1
 * 
 */
/** 
 * @abstract 将以上真值表转换成一维
 * 0: 1
 * 1: 3
 * 2: 1
 * ...
 * @
*/
// 将以上表转换成以下三维数组表示,这样在逻辑判断时就可以避免使用复杂的逻辑判断(if/else)
let table = [
    [
        [
            0, // c = 0
            3,

        ], // b = 0
        [
            2,
            2,
        ], // b= 1
    ], // a= 0
    [
        [
            1,
            2,
        ], //b = 0
        [
            1, 
            1
        ], // b = 1
    ], // a= 1
]


const printTable = (a,b,c) => table[a][b][c];

console.log(printTable(1,0,1))